#! /bin/bash -f

#--- Settings ---

uidPrefix="bw"
uidSuffix="@berkeley.edu"
locLdapContainer='ou=locations,ou=public,dc=bedework,dc=org'
peopleLdapContainer='ou=locations,dc=bedework,dc=org'

# data was generated by taking the Berkeley data and putting it through `grep '^[a-zA-Z ]* ([0-9]*)'`
# to get records that are likely to be a building and a room number.

# input
INFILE=$1
# field seperator used in input file
FS='|'

# output
LDAPLOC=ldapLoc.ldif
VCARDLOC=vcardLoc
LDAPPEOPLE=ldapPeople
VCARDPEOPLE=vcardPeople

LDAPSetLines="objectclass: top
objectclass: calendarresource
objectclass: schedapprovalinfo
objectclass: calEntry
objectclass: room"

VCARDHeader="BEGIN:VCARD
   VERSION:4.0"
VCARDFooter="   END:VCARD"

#--- end settings ---

cp /dev/null $LDAPLOC
cp /dev/null $VCARDLOC
cp /dev/null $LDAPPEOPLE
cp /dev/null $VCARDPEOPLE

counter=0
while read line; do
	buildPerson="false"	
	counter=`expr $counter + 1`
	
	
	#F1 => room description
	F1=$(echo $line|cut -d $FS -f 1)
	# we'll hack together a cn/FN out of the description.
	cn=`echo $F1 | sed 's/ Hall//;s/ Building//;s/ Center//;s/ Bldg//' \
	    | sed 's/ Student Ctr//;s/ Media Room//;s/ Art History Seminar Room//;s/ Place//' \
	    | cut -d \| -f1 | cut -d ')' -f1 \
	    | sed 's/ //g;s/(//'`
	
	F2=$(echo $line|cut -d $FS -f 2)
	#F3 => capacity/CAPACITY
	F3=$(echo $line|cut -d $FS -f 3)
	#F4 => last name of room manager
	F4=$(echo $line|cut -d $FS -f 4)
	#F5 => first name of room manager
	F5=$(echo $line|cut -d $FS -f 5)
	if [ "$F5" != "" ]; then
		buildPerson="true"
		roomManager=${F5}${F4}
    fi
	#F6 => phone number of room manager
	F6=$(echo $line|cut -d $FS -f 6)
	contactPhone=$F6
	#F7 => fax number of room manager
	F7=$(echo $line|cut -d $FS -f 7)
	contactFax=$F7
	#F8 => email of room manager
	F8=$(echo $line|cut -d $FS -f 8)
	contactEmail=$F8
	#F9 => 
	F9=$(echo $line|cut -d $FS -f 9)
	F10=$(echo $line|cut -d $FS -f10)
	#F11 Requires Approval
	F11=$(echo $line|cut -d $FS -f11)
	if [ "$F11" = "" ]; then
	  autoaccept=TRUE
	else
	  autoaccept=FALSE
	fi
	F12=$(echo $line|cut -d $FS -f12)
	F13=$(echo $line|cut -d $FS -f13)
	
	#generate UID
	case $counter in
		?) normalizedCounter="00000${counter}"
		   ;;
		??) normalizedCounter="0000${counter}"
	       ;;
	    ???) normalizedCounter="000${counter}"
	       ;;
	esac
	uid="${uidPrefix}${normalizedCounter}${uidSuffix}"

    # If no info on autoaccept, turn it on.	
	if [ "$F12" = "" ]; then 
		F12="TRUE"
	fi
	
#### locations
	
    #LDAP
echo "dn: cn=$cn,$locLdapContainer
$LDAPSetLines
kind: location
uid: $uid
calCalAdrURI: mailto:loc_${cn}${uidSuffix}
mail: loc_${cn}${uidSuffix}
cn: $cn
ou: locations
description: $F1" >> $LDAPLOC
  if [ "$F3" != "" ]; then
    echo "capacity: $F3" >> $LDAPLOC
  fi
  echo "autoschedule: $autoaccept
" >> $LDAPLOC

    #VCARD
  echo "$VCARDHeader
   UID:urn:uuid:$uid
   KIND: location
   FN: $cn
   ORG: locations
   NOTE: $F1
   CAPACITY: $F3
   AUTOACCEPT: $autoaccept
$VCARDFooter
" >> $VCARDLOC

### people
  if [ $buildPerson = "true" ]; then
	echo "dn: cn=${roomManager}, $peopleLdapContainer" >> $LDAPPEOPLE 
  fi

done < $INFILE


